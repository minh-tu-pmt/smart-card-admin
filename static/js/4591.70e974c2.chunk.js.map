{"version":3,"file":"static/js/4591.70e974c2.chunk.js","mappings":"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","sources":["hook/firebase.js","views/info/Info.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { initializeApp, getApps } from 'firebase/app'\nimport { getDatabase, ref, push, onValue, set } from 'firebase/database'\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth'\nimport { getFirestore } from 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCE9fEajl4WF_Cxl8Fwn_LeTeQeUiIMw1c',\n  authDomain: 'smart-card-visit.firebaseapp.com',\n  databaseURL: 'https://smart-card-visit-default-rtdb.asia-southeast1.firebasedatabase.app',\n  projectId: 'smart-card-visit',\n  storageBucket: 'smart-card-visit.appspot.com',\n  messagingSenderId: '291836209337',\n  appId: '1:291836209337:web:1d9d4a1bd7a02ccc9d5368',\n  measurementId: 'G-E0R15PXEJ1',\n}\n\nconst app = getApps().length ? getApps() : initializeApp(firebaseConfig)\nconst database = getFirestore(app)\nconst auth = getAuth(app)\nconst provider = new GoogleAuthProvider()\n\nexport { database, ref, push, onValue, set, auth, provider }\n","/* eslint-disable prettier/prettier */\nimport PropTypes from 'prop-types'\nimport {\n  CAvatar,\n  CButton,\n  CCard,\n  CCardBody,\n  CCloseButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\nimport { cilPen, cilX } from '@coreui/icons'\nimport React, { useEffect, useRef, useState } from 'react'\n\nimport { doc, getDoc, setDoc} from \"firebase/firestore\";\nimport { getStorage, ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { database } from '../../hook/firebase'\nimport { useParams } from 'react-router-dom'\nimport default_avatar from '../../assets/images/avatars/default.jpg';\nimport email_icon from '../../assets/icon/email_icon.png';\nimport fb_icon from '../../assets/icon/fb_icon.png';\nimport zalo_icon from '../../assets/icon/logo_zalo.png';\nimport telegram_icon from '../../assets/icon/telegram_icon.png';\nimport phone_icon from '../../assets/icon/phone_icon.jpg'\nimport contact_icon from '../../assets/icon/contact_icon.png'\n\nconst OPTIONS = [\n  { label: 'zalo', value: 'zalo' },\n  { label: 'facebook', value: 'facebook' },\n  { label: 'email', value: 'email' },\n  { label: 'telegram', value: 'telegram' },\n  { label: 'phone', value: 'phone' },\n  { label: 'other', value: 'other' },\n]\n\nconst getIcon = (type) => {\n  switch (type) {\n    case 'zalo':\n      return zalo_icon\n    case 'facebook':\n      return fb_icon\n    case 'email':\n      return email_icon\n    case 'telegram':\n      return telegram_icon\n    case 'phone':\n      return phone_icon\n    default:\n      return contact_icon\n  }\n}\n\nfunction makeid(length=32) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const charactersLength = characters.length;\n  for ( let i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random()*charactersLength));\n }\n return result;\n}\n\nfunction Info() {\n  const params = useParams()\n  const [image, setImage] = useState()\n  const [contacts, setContacts] = useState()\n  const fileRef = useRef()\n\n  const onChangeName = (e) => {\n    const name = e.target.value;\n    setContacts({ ...contacts, displayName: name })\n  }\n\n  const onChangeJobTitle = (e) => {\n    const title = e.target.value;\n    setContacts({ ...contacts, bio: title })\n  }\n\n  const onChangeImage = (e) => {\n    setImage(e.target.files[0])\n    e.target.value = null\n  }\n\n  const onUpdateClick = async() => {\n    console.log(contacts)\n    const docRef = await setDoc(doc(database, \"users\", params.id), contacts)\n    console.log(docRef)\n  }\n\n  const getData = async (id) => {\n    const docRef = doc(database, \"users\", id);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      console.log(\"Document data:\", docSnap.data());\n      setContacts(docSnap.data())\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }\n\n  useEffect(() => {\n    getData(params.id)\n  }, [])\n\n  const addContact = (contact) => {\n    const tmp = {...contacts}\n    if(tmp.links){\n      tmp.links.push(contact)\n    }\n    else{\n      tmp.links = [contact]\n    }\n    setContacts(tmp)\n  }\n\n  const onClearClick = () => {\n    const tmp = {...contacts}\n    tmp.links=[]\n    setContacts(tmp)\n  }\n\n  const uploadFile = () => {\n    const imgID = makeid();\n    const storage = getStorage();\n    const storageRef = ref(storage, imgID);\n\n    // 'file' comes from the Blob or File API\n    uploadBytes(storageRef, image).then((snapshot) => {\n      console.log('Uploaded a blob or file!', snapshot);\n      getDownloadURL(ref(storage, imgID)).then((url) => {\n        setContacts({...contacts, photoURL: url})\n        setImage(null)\n      })\n      .catch((error) => {\n        // Handle any errors\n        console.log(error)\n      });\n    });\n  }\n\n  return (\n    <div>\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <h3>Information</h3>\n          {contacts ?\n            <>\n              <div className='d-flex'>\n                <CButton color=\"primary\" shape=\"rounded-0\" size=\"sm\" className='m-1' onClick={onUpdateClick}>\n                  Update\n                </CButton>\n              </div>\n              <div className=\"mb-3\">\n                <div>\n                  <CFormLabel htmlFor=\"formFileSm\">Avatar</CFormLabel>\n                </div>\n                <div className='d-inline-block' style={{ position: 'relative' }}>\n                  <CAvatar src={image ? URL.createObjectURL(image) : (contacts.photoURL || default_avatar)} style={{ width: '10rem', height: '10rem' }} />\n                  <div className='d-flex p-2' style={{ position: 'absolute', top: 0, right: 0, cursor: 'pointer' }} onClick={() => { fileRef.current.click() }}>\n                    <CIcon icon={cilPen}></CIcon>\n                  </div>\n                </div>\n                <CFormInput ref={fileRef} type=\"file\"\n                  size=\"sm\" id=\"formFileSm\" onChange={onChangeImage} accept=\"image/*\" hidden />\n                {image && <CButton color=\"primary\" shape=\"rounded-0\" size=\"sm\" className='m-1' onClick={uploadFile}>\n                  Upload\n                </CButton>}\n              </div>\n\n              <div>\n                <CForm>\n                  <CFormInput\n                    type=\"text\"\n                    id=\"name\"\n                    label=\"Fullname\"\n                    placeholder=\"Tu PM\"\n                    value={contacts.displayName || ''}\n                    onChange={onChangeName}\n                    aria-describedby=\"exampleFormControlInputHelpInline\"\n                  />\n                  <CFormInput\n                    type=\"text\"\n                    id=\"job_title\"\n                    label=\"Job title\"\n                    placeholder=\"SW Engineer\"\n                    value={contacts.bio || ''}\n                    onChange={onChangeJobTitle}\n                    aria-describedby=\"exampleFormControlInputHelpInline\"\n                  />\n                </CForm>\n                <div>\n                  <div className='mt-4' style={{fontWeight: 700, fontSize: 20}}>List contacts</div>\n                  {contacts.links && contacts.links.map((item, index) => (\n                    <div key={index} className=\"d-flex p-2 align-items-center\" style={{ margin: '10px 0', border: '1px solid rgba(0,0,0,0.7)' }}>\n                      <div style={{ width: '10%' }}>\n                        <CAvatar src={getIcon(item.type)} size='md'></CAvatar>\n                      </div>\n                      <div style={{ width: '15%' }}>\n                        {item.title}\n                      </div>\n                      <div style={{ width: '75%' }}>\n                        {item.url}\n                      </div>\n                      <div>\n                        <CCloseButton />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n                <div>\n                  <Addition add={addContact} clear = {onClearClick}/>\n                </div>\n              </div>\n            </> : null}\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nconst Addition = ({ add, clear }) => {\n  const [type, setType] = useState(OPTIONS[1].value)\n  const [title, setTitle] = useState('')\n  const [url, setUrl] = useState('')\n\n  const onChangeType = (e) => {\n    setType(e.target.value)\n  }\n\n  const onChangeTitle = (e) => {\n    setTitle(e.target.value)\n  }\n\n  const onChangeUrl = (e) => {\n    setUrl(e.target.value)\n  }\n\n  const onAddClicked = () => {\n    add({ type, title, url })\n  }\n\n  useEffect(() => {\n    console.log(type)\n  }, [type])\n\n\n  return (\n    <div className=\"mt-4\">\n      <CRow>\n        <CCol sm>\n          <CFormSelect\n            value={type}\n            onChange={onChangeType}\n            label=\"Type\"\n            aria-label=\"Default select example\"\n            options={OPTIONS}\n          ></CFormSelect>\n        </CCol>\n        <CCol sm>\n          <CFormInput\n            type=\"text\"\n            id=\"title\"\n            label=\"Title\"\n            placeholder=\"etc: Zalo\"\n            aria-describedby=\"exampleFormControlInputHelpInline\"\n            value={title}\n            onChange={onChangeTitle}\n          />\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol>\n          <CFormInput\n            type=\"text\"\n            id=\"url\"\n            label=\"URL\"\n            placeholder=\"etc: https://domain.com\"\n            aria-describedby=\"exampleFormControlInputHelpInline\"\n            value={url}\n            onChange={onChangeUrl}\n          />\n        </CCol>\n      </CRow>\n      <div className='mt-2'>\n        <CButton color=\"primary\" shape=\"rounded-0\" size=\"sm\" className='me-1' onClick={onAddClicked}>\n          Add\n        </CButton>\n        <CButton color=\"danger\" shape=\"rounded-0\" size=\"sm\" className='me-1' onClick={clear}>\n          Clear\n        </CButton>\n        <CButton color=\"secondary\" shape=\"rounded-0\" size=\"sm\">\n          Cancel\n        </CButton>\n        \n      </div>\n    </div>\n  )\n}\n\nAddition.propTypes = {\n  add: PropTypes.func,\n  clear: PropTypes.func\n}\n\nexport default Info\n"],"names":["app","getApps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getFirestore","getAuth","GoogleAuthProvider","OPTIONS","label","value","getIcon","type","zalo_icon","phone_icon","contact_icon","Addition","add","clear","useState","setType","title","setTitle","url","setUrl","useEffect","console","log","className","sm","onChange","e","target","options","id","placeholder","color","shape","size","onClick","params","useParams","image","setImage","contacts","setContacts","fileRef","useRef","onUpdateClick","setDoc","doc","docRef","getData","getDoc","docSnap","exists","data","htmlFor","style","position","src","URL","createObjectURL","photoURL","default_avatar","width","height","top","right","cursor","current","click","icon","cilPen","ref","files","accept","hidden","imgID","result","characters","charactersLength","i","charAt","Math","floor","random","makeid","storage","getStorage","storageRef","uploadBytes","then","snapshot","getDownloadURL","catch","error","displayName","name","bio","fontWeight","fontSize","links","map","item","index","margin","border","contact","tmp","push"],"sourceRoot":""}