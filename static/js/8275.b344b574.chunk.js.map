{"version":3,"file":"static/js/8275.b344b574.chunk.js","mappings":"yPAiBMA,GAAMC,EAAAA,EAAAA,MAAUC,QAASD,EAAAA,EAAAA,OAAYE,EAAAA,EAAAA,IAXpB,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,6EACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIXC,GAAWC,EAAAA,EAAAA,IAAab,IACjBc,EAAAA,EAAAA,IAAQd,GACJ,IAAIe,EAAAA,E,yJCXfC,EAAS,CACb,CAAEC,MAAO,MAAOC,aAAa,GAC7B,CAAED,MAAO,SAAUC,aAAa,GAChC,CAAED,MAAO,OAAQC,aAAa,GAC9B,CAAED,MAAO,QAASC,aAAa,GAC/B,CAAED,MAAO,SAAUC,aAAa,IA+DlC,UA5DA,SAAuBC,GACrB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAO,yCAAG,gGACRC,EAAO,GADC,UAEcC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWhB,EAAAA,GAAU,UAF3C,cAGAiB,SAAQ,SAACC,GACrBJ,EAAKK,MAAL,QAAWC,GAAGF,EAAIE,IAAOF,EAAIJ,QAC9B,IACDF,EAAS,GAAD,OAAKE,IANC,2CAAH,qDAkBb,OATAO,EAAAA,EAAAA,YAAU,WACRR,GACD,GAAE,IAEHS,QAAQC,IAAIZ,IAMV,0BACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,4CACA,UAAC,KAAD,YACE,SAAC,IAAD,CAAYa,MAAM,QAAlB,UACE,SAAC,KAAD,UACGpB,EAAOqB,KAAI,SAACC,EAAMC,GAAP,OACV,SAAC,KAAD,CAA8BC,MAAM,MAApC,SAA2CF,EAAKrB,OAAzBsB,EADb,SAKhB,SAAC,KAAD,UACGhB,EAAMc,KAAI,SAACC,EAAMC,GAAP,OACT,UAAC,KAAD,YACE,SAAC,KAAD,CAAkBC,MAAM,MAAxB,SAA+BD,EAAQ,KACvC,SAAC,KAAD,WACE,SAAC,KAAD,CAASE,IAAKH,EAAKI,UAAYC,EAAgBC,KAAK,UAEtD,SAAC,KAAD,UAAiBN,EAAKO,aAAe,MACrC,SAAC,KAAD,UAAiBP,EAAKQ,KAAO,MAC7B,UAAC,KAAD,CAAgBC,MAAO,CAACC,MAAO,SAA/B,WACE,SAAC,KAAD,CAASZ,MAAM,OAAOQ,KAAK,KAAKK,UAAU,kBAAkBC,QAAS,WA3BnE,IAAClB,IA2BqFM,EAAKN,GA1B7GZ,EAAS,SAAD,OAAUY,GA0B+F,EAAjG,mBACA,SAAC,KAAD,CAASI,MAAM,SAASQ,KAAK,KAAKK,UAAU,aAA5C,yBATYV,EADP,eAoBxB,C","sources":["hook/firebase.js","views/info/InfoDashboard.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { initializeApp, getApps } from 'firebase/app'\nimport { getDatabase, ref, push, onValue, set } from 'firebase/database'\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth'\nimport { getFirestore } from 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCE9fEajl4WF_Cxl8Fwn_LeTeQeUiIMw1c',\n  authDomain: 'smart-card-visit.firebaseapp.com',\n  databaseURL: 'https://smart-card-visit-default-rtdb.asia-southeast1.firebasedatabase.app',\n  projectId: 'smart-card-visit',\n  storageBucket: 'smart-card-visit.appspot.com',\n  messagingSenderId: '291836209337',\n  appId: '1:291836209337:web:1d9d4a1bd7a02ccc9d5368',\n  measurementId: 'G-E0R15PXEJ1',\n}\n\nconst app = getApps().length ? getApps() : initializeApp(firebaseConfig)\nconst database = getFirestore(app)\nconst auth = getAuth(app)\nconst provider = new GoogleAuthProvider()\n\nexport { database, ref, push, onValue, set, auth, provider }\n","/* eslint-disable prettier/prettier */\r\nimport React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { collection, getDocs } from \"firebase/firestore\";\r\nimport { database } from '../../hook/firebase'\r\nimport { CAvatar, CButton, CCard, CCardBody, CCol, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\r\nimport default_avatar from '../../assets/images/avatars/default.jpg';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst HEADER = [\r\n  { label: 'No.', header_cell: true },\r\n  { label: 'Avatar', header_cell: false },\r\n  { label: 'Name', header_cell: false },\r\n  { label: 'Title', header_cell: false },\r\n  { label: 'Action', header_cell: false }\r\n]\r\n\r\nfunction InfoDashboard(props) {\r\n  const navigate = useNavigate()\r\n  const [users, setUsers] = useState([])\r\n\r\n  const getData = async () => {\r\n    const data = []\r\n    const querySnapshot = await getDocs(collection(database, \"users\"));\r\n    querySnapshot.forEach((doc) => {\r\n      data.push({id:doc.id, ...doc.data()})\r\n    });\r\n    setUsers([...data])\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n  }, [])\r\n\r\n  console.log(users)\r\n  const onEditClick = (id) => {\r\n    navigate(`/info/${id}`)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CCard>\r\n        <CCardBody>\r\n          <h4>Info Dashboard</h4>\r\n          <CTable>\r\n            <CTableHead color=\"light\">\r\n              <CTableRow>\r\n                {HEADER.map((item, index) => (\r\n                  <CTableHeaderCell key={index} scope=\"col\">{item.label}</CTableHeaderCell>\r\n                ))}\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              {users.map((item, index) => (\r\n                <CTableRow key={index}>\r\n                  <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\r\n                  <CTableDataCell>\r\n                    <CAvatar src={item.photoURL || default_avatar} size=\"md\" />\r\n                  </CTableDataCell>\r\n                  <CTableDataCell>{item.displayName || ''}</CTableDataCell>\r\n                  <CTableDataCell>{item.bio || ''}</CTableDataCell>\r\n                  <CTableDataCell style={{width: '150px'}}>\r\n                    <CButton color='info' size='sm' className='text-light me-2' onClick={() => {onEditClick(item.id)}}>Edit</CButton>\r\n                    <CButton color='danger' size='sm' className='text-light'>Remove</CButton>\r\n                  </CTableDataCell>\r\n                </CTableRow>\r\n              ))}\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCardBody>\r\n      </CCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nInfoDashboard.propTypes = {}\r\n\r\nexport default InfoDashboard\r\n"],"names":["app","getApps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getFirestore","getAuth","GoogleAuthProvider","HEADER","label","header_cell","props","navigate","useNavigate","useState","users","setUsers","getData","data","getDocs","collection","forEach","doc","push","id","useEffect","console","log","color","map","item","index","scope","src","photoURL","default_avatar","size","displayName","bio","style","width","className","onClick"],"sourceRoot":""}